from itertools import permutations

def tsp(graph, start=0):
    nodes = list(range(len(graph)))
    nodes.remove(start)
    min_path = None
    min_cost = float('inf')
    for perm in permutations(nodes):
        cost = graph[start][perm[0]]
        for i in range(len(perm)-1):
            cost += graph[perm[i]][perm[i+1]]
        cost += graph[perm[-1]][start]
        if cost < min_cost:
            min_cost = cost
            min_path = (start,) + perm + (start,)
    return min_path, min_cost

graph = [[0,10,15,20],[10,0,35,25],[15,35,0,30],[20,25,30,0]]
path, cost = tsp(graph)
print(f"Path: {path}, Cost: {cost}")
